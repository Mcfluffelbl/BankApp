@page "/Konton"
@using BlazorApp1.Services
@inject IAccountService AccountService

<h3>Vänligen skapa ett konto</h3>

<EditForm Model="_model" OnValidSubmit="CreateAccountAsync">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-2">
        <label>Account Name</label>
        <InputText @bind-Value="_model.Name" />
    </div>
    <div class="mb-2">
        <label>Account Type</label>
        <InputSelect @bind-Value="_model.AccountType">
            <option value="">Pick type!</option>
            <option value="@AccountType.Deposit">Deposit Account</option>
            <option value="@AccountType.Savings">Savings Account</option>
        </InputSelect>
    </div>
    <div class="mb-2">
        <label>Currency</label>
        <InputText @bind-Value="_model.Currency" />
    </div>
    <div class="mb-2">
        <label>Balance</label>
        <InputNumber @bind-Value="_model.InitialBalance" />
    </div>
    <button type="submit">Create Account</button>
</EditForm>



@code {
    private readonly CreateAccountModel _model = new();
    private List<CreateAccountModel> _createdAccounts = new();

    private Task CreateAccountAsync()
    {
        try
        {
            AccountService.CreateAccount(
            _model.Name,
            _model.AccountType,
            _model.Currency,
            _model.InitialBalance
            );
        }
        catch (Exception exception)
        {
            Console.WriteLine(exception);
            throw;
        }
        return Task.CompletedTask;
    }

    private class CreateAccountModel
    {
        public string? Name { get; set; }
        public AccountType AccountType { get; set; }
        public string? Currency { get; set; } 
        public decimal InitialBalance { get; set; }

        public void Clear()
        {
            Name = string.Empty;
            AccountType = AccountType.Savings;
            Currency = "SEK";
            InitialBalance = 0;
        }
    }
}
